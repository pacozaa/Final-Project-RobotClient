/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package serverui;

import java.awt.event.ActionEvent;
import java.awt.event.WindowEvent;
import java.io.IOException;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ActionMap;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.KeyStroke;
import javax.swing.InputMap;
import javax.swing.JToggleButton;

import javax.swing.SwingUtilities;

public class GuiControlNode extends javax.swing.JFrame{


    public boolean CheckListenbtn = false;
    public boolean CheckDisconnectbtn = false;
    public String DirectionStream = null;
    public GuiControlNode() throws IOException{
        initComponents();    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ConSole = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        Close = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        Go = new javax.swing.JButton();
        RotateLeft = new javax.swing.JButton();
        RotateRight = new javax.swing.JButton();
        ConToRobot = new javax.swing.JButton();
        ModeSelect = new javax.swing.JToggleButton();
        GraphicMap = new J2d1();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("STATUS");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        Close.setText("Close");
        Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseActionPerformed(evt);
            }
        });

        Back.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Back.setLabel("S");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        Go.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Go.setText("W");
        Go.setToolTipText("");
        Go.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoActionPerformed(evt);
            }
        });

        RotateLeft.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        RotateLeft.setLabel("A");
        RotateLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotateLeftActionPerformed(evt);
            }
        });

        RotateRight.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        RotateRight.setLabel("D");
        RotateRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotateRightActionPerformed(evt);
            }
        });

        ConToRobot.setText("Wake Robot!");
        ConToRobot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConToRobotActionPerformed(evt);
            }
        });

        ModeSelect.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        ModeSelect.setText("MANUAL MODE");
        ModeSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModeSelectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ConSoleLayout = new javax.swing.GroupLayout(ConSole);
        ConSole.setLayout(ConSoleLayout);
        ConSoleLayout.setHorizontalGroup(
            ConSoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConSoleLayout.createSequentialGroup()
                .addGroup(ConSoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConSoleLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(ConSoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(ConSoleLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(ConToRobot)
                                .addGap(18, 18, 18)
                                .addComponent(Close, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(ConSoleLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(ConSoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ModeSelect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(ConSoleLayout.createSequentialGroup()
                                .addComponent(RotateLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(ConSoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Go, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(ConSoleLayout.createSequentialGroup()
                                        .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(RotateRight, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        ConSoleLayout.setVerticalGroup(
            ConSoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ConSoleLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Go, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ConSoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RotateLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RotateRight, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ModeSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ConSoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Close)
                    .addComponent(ConToRobot))
                .addContainerGap())
        );

        Action actionListenerKey = new AbstractAction() {
            public void actionPerformed(ActionEvent actionEvent) {
                JButton source = (JButton) actionEvent.getSource();
                //System.out.println("Activated: " + source.getText());
                String tx=source.getText();
                if(tx == "W"){
                    Go.doClick();
                }
                else if(tx == "S"){
                    Back.doClick();
                }
                else if(tx == "A"){
                    RotateLeft.doClick();
                }
                else if(tx == "D"){
                    RotateRight.doClick();
                }
            }
        };

        KeyStroke W_Go = KeyStroke.getKeyStroke("W");
        InputMap inputMap = Go.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(W_Go, "The Action");
        ActionMap actionMap = Go.getActionMap();
        actionMap.put("The Action", actionListenerKey);

        KeyStroke S_Back = KeyStroke.getKeyStroke("S");
        inputMap = Back.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(S_Back, "The Action");
        actionMap = Back.getActionMap();
        actionMap.put("The Action", actionListenerKey);

        KeyStroke A_RotateLeft = KeyStroke.getKeyStroke("A");
        inputMap = RotateLeft.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(A_RotateLeft, "The Action");
        actionMap = RotateLeft.getActionMap();
        actionMap.put("The Action", actionListenerKey);

        KeyStroke D_RotateRight = KeyStroke.getKeyStroke("D");
        inputMap = RotateRight.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(D_RotateRight, "The Action");
        actionMap = RotateRight.getActionMap();
        actionMap.put("The Action", actionListenerKey);
        Action actionListenerKey2 = new AbstractAction() {
            public void actionPerformed(ActionEvent actionEvent) {
                JToggleButton source = (JToggleButton) actionEvent.getSource();
                //System.out.println("Activated: " + source.getText());
                String tx=source.getText();
                if(tx == "MANUAL MODE" || tx == "AUTO MODE"){
                    ModeSelect.doClick();
                }
            }
        };

        KeyStroke E_ModeSelect = KeyStroke.getKeyStroke("E");
        InputMap inputMap2 = ModeSelect.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap2.put(E_ModeSelect, "The Action");
        ActionMap actionMap2 = ModeSelect.getActionMap();
        actionMap2.put("The Action", actionListenerKey2);

        GraphicMap.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout GraphicMapLayout = new javax.swing.GroupLayout(GraphicMap);
        GraphicMap.setLayout(GraphicMapLayout);
        GraphicMapLayout.setHorizontalGroup(
            GraphicMapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 708, Short.MAX_VALUE)
        );
        GraphicMapLayout.setVerticalGroup(
            GraphicMapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ConSole, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GraphicMap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ConSole, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GraphicMap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseActionPerformed
      this.CheckDisconnectbtn = true;
      this.dispose();
      System.exit(0);
    }//GEN-LAST:event_CloseActionPerformed

    private void GoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoActionPerformed
      this.DirectionStream = "W";
      this.displayMessage("Hi_W");
    }//GEN-LAST:event_GoActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
      this.DirectionStream = "S";
      this.displayMessage("Hi_S");
    }//GEN-LAST:event_BackActionPerformed

    private void RotateRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotateRightActionPerformed
      this.DirectionStream = "D";
      this.displayMessage("Hi_D");
    }//GEN-LAST:event_RotateRightActionPerformed

    private void RotateLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotateLeftActionPerformed
      this.DirectionStream = "A";
      this.displayMessage("Hi_A");
    }//GEN-LAST:event_RotateLeftActionPerformed

    private void ConToRobotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConToRobotActionPerformed
        this.CheckListenbtn = true;
    }//GEN-LAST:event_ConToRobotActionPerformed

    private void ModeSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModeSelectActionPerformed
        if("MANUAL MODE".equals(ModeSelect.getText())){
            ModeSelect.setText("AUTO MODE");
            Go.setEnabled(false);
            Back.setEnabled(false);
            RotateLeft.setEnabled(false);
            RotateRight.setEnabled(false);
        }
        else if("AUTO MODE".equals(ModeSelect.getText())){
            ModeSelect.setText("MANUAL MODE");
            Go.setEnabled(true);
            Back.setEnabled(true);
            RotateLeft.setEnabled(true);
            RotateRight.setEnabled(true);
        }
    }//GEN-LAST:event_ModeSelectActionPerformed
    public void windowClosing(WindowEvent e)
    {
        this.CheckDisconnectbtn = true;
    }
    
    public void displayMessage( final String messageToDisplay )
    {
      SwingUtilities.invokeLater(
         new Runnable() 
         {
            public void run() // updates displayArea
            {
               jTextArea1.append( messageToDisplay+"\n" ); // append message
            } // end method run
         } // end anonymous inner class
      ); // end call to SwingUtilities.invokeLater
    } // end method displayMessage
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]){
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new gui().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton Close;
    private javax.swing.JPanel ConSole;
    private javax.swing.JButton ConToRobot;
    private javax.swing.JButton Go;
    private javax.swing.JPanel GraphicMap;
    private javax.swing.JToggleButton ModeSelect;
    private javax.swing.JButton RotateLeft;
    private javax.swing.JButton RotateRight;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}

